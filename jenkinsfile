pipeline {
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage('build dockerimage'){
            steps{

                sh "docker build . -t tharun13055/nodejs_dev:${DOCKER_TAG}"
            }
        }
        stage('dockerimage push dockerhub'){
            steps{
                withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhubpwd')]) {
                    sh "docker login -u tharun13055 -p ${dockerhubpwd}"
                    sh 'docker push tharun13055/nodejs_dev:${DOCKER_TAG}'
                }
            }
        }
        stage('kubernetes deploy'){
            steps{
                sh "chmod +x changeTag.sh"
                sh "./changeTag.sh ${DOCKER_TAG}"
                sshagent(['aws']) {
                    sh "scp -o StrictHostKeyChecking=no service.yaml node-app-pod.yaml ubuntu@54.196.255.21:/home/ubuntu/"
                    script{
                        try{
                            sh "ssh ubuntu@54.196.255.21 kubectl apply -f ."
                        }
                        catch(error){
                            sh "ssh ubuntu@54.196.255.21 kubectl create -f ."
                        }
                    }
                    }
            }
        }
    }
}

def getDockerTag(){
    def tag = sh script: 'git rev-parse HEAD',returnStdout: true
    return tag
}
