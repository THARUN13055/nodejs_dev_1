pipeline {
    agent any
    environment{
        DOCKER_TAG = getDockerTag()
    }
    stages{
        stage('build dockerimage'){
            steps{

                sh "docker build . -t tharun13055/nodejs_dev:${DOCKER_TAG}"
            }
        }
        stage('dockerimage push dockerhub'){
            steps{
                withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhubpwd')]) {
                    sh "docker login -u tharun13055 -p ${dockerhubpwd}"
                    sh 'docker push tharun13055/nodejs_dev:${DOCKER_TAG}'
                }
            }
        }
        stage('dockerhub push kubernetes'){
            steps{
                sh "chmod +x changeTag.sh"
                sh "./changeTag.sh ${DOCKER_TAG}"   
                script{
                    try{
                        sh"kubectl apply -f ."
                    }
                    catch(error){
                        sh"kubectl create -f ."
                    }
                }
            }
        }
    }
}

def getDockerTag(){
    def tag = sh script: 'git rev-parse HEAD',returnStdout: true
    return tag
}